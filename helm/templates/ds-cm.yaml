{{ if .Values.daemonset_config.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: v-agent-ds
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: v-agent-ds
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |-
    ---
    debug: true
    listen: 0.0.0.0
    port: 7091
    interval: {{ .Values.config.interval }}
    endpoint: {{ .Values.config.endpoint }}
    basic_auth_user: "{{ .Values.config.basic_auth_user }}"
    basic_auth_pass: "{{ .Values.config.basic_auth_pass }}"
    check_vendor: false
    labels_config:
{{ toYaml .Values.daemonset_config.labels_config | indent 6 }}
    metrics_config:
      load_avg:
        enabled: {{ .Values.daemonset_config.metrics_config.load_avg.enabled }}
      cpu:
        enabled: {{ .Values.daemonset_config.metrics_config.cpu.enabled }}
      memory:
        enabled: {{ .Values.daemonset_config.metrics_config.memory.enabled }}
      nic:
        enabled: {{ .Values.daemonset_config.metrics_config.nic.enabled }}
      disk_stats:
        enabled: {{ .Values.daemonset_config.metrics_config.disk_stats.enabled }}
        filter: "sr0" # regex
      file_system:
        enabled: {{ .Values.daemonset_config.metrics_config.file_system.enabled }}
      kubernetes:
        enabled: {{ .Values.daemonset_config.metrics_config.kubernetes.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.kubernetes.endpoint }}
        kubeconfig: /var/lib/kubernetes/admin.kubeconfig
      konnectivity:
        enabled: {{ .Values.daemonset_config.metrics_config.konnectivity.enabled }}
        metrics_endpoint: {{ .Values.config.metrics_config.konnectivity.metrics_endpoint }}
        health_endpoint: {{ .Values.config.metrics_config.konnectivity.health_endpoint }}
      etcd:
        enabled: {{ .Values.daemonset_config.metrics_config.etcd.enabled }}
        cacert: /var/lib/kubernetes/ca.pem
        cert: /var/lib/kubernetes/kubernetes.pem
        key: /var/lib/kubernetes/kubernetes-key.pem
        endpoint: {{ .Values.daemonset_config.metrics_config.etcd.endpoint }}
      nginx_vts:
        enabled: {{ .Values.daemonset_config.metrics_config.nginx_vts.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.nginx_vts.endpoint }}
      v_cdn_agent:
        enabled: {{ .Values.daemonset_config.metrics_config.v_cdn_agent.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.v_cdn_agent.endpoint }}
      haproxy:
        enabled: {{ .Values.daemonset_config.metrics_config.haproxy.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.haproxy.endpoint }}
      ganesha:
        enabled: {{ .Values.daemonset_config.metrics_config.ganesha.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.ganesha.endpoint }}
      ceph:
        enabled: {{ .Values.daemonset_config.metrics_config.ceph.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.ceph.endpoint }}
      v_dns:
        enabled: {{ .Values.daemonset_config.metrics_config.v_dns.enabled }}
        endpoint: {{ .Values.daemonset_config.metrics_config.v_dns.endpoint }}
      smart:
        enabled: {{ .Values.daemonset_config.metrics_config.smart.enabled }}
      kubernetes_pods:
        enabled: {{ .Values.daemonset_config.metrics_config.kubernetes_pods.enabled }}
        namespaces:
{{ toYaml .Values.daemonset_config.metrics_config.kubernetes_pods.namespaces | indent 8 }}
      dcgm:
        enabled: {{ .Values.daemonset_config.metrics_config.dcgm.enabled }}
        namespace: {{ .Values.daemonset_config.metrics_config.dcgm.namespace }}
        endpoint: {{ .Values.daemonset_config.metrics_config.dcgm.endpoint }}
{{ end }}